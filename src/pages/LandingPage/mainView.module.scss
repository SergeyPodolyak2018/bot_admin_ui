@import '../../styles/devices.mixins';
@import '../../styles/text.mixins';

.container {
  position: relative;
  width: 100%;
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  // overflow-y: scroll;
  overflow-x: hidden;
  // height: 100%;
  height: 100vh;
  overflow-y: scroll;
  scroll-snap-type: y mandatory;
  scroll-behavior: smooth;

  // .subContainer {
  //   scroll-snap-type: y mandatory;
  //   scroll-behavior: smooth;
  //   height: 100%;
  // }

  .content {
    scroll-snap-type: y mandatory;
    scroll-behavior: smooth;
    height: 100%;

    width: 82%;

    @include small-desktop {
      width: 75%;
    }
    @include tablet-width {
      width: 80%;
    }
    @include smallTablet-width {
      width: 90%;
    }

    @include mobile-width {
      width: 90%;
    }
  }

  // width: 100%;
  // height: 100vh;
  // overflow-y: scroll;

  .treeContainer {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .treeNode {
    flex: 1;
    position: relative;
    display: flex;
  }

  .treeDivider {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 50%;
    width: 2px;
    background-color: #ccc;
  }

  .treeNodeContent {
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    max-width: 300px;
  }

  .nodeTitle {
    font-size: 1.2rem;
    margin-bottom: 10px;
  }

  .nodeText {
    font-size: 1rem;
    line-height: 1.5;
  }
}

.firstHandContainer {
  position: absolute;
  width: 30vw;
  // height: 60vh;
  top: 6vh;
  left: 0;
  // object-fit: contain;
  img {
    position: absolute;
    bottom: 0;
  }
}

.secondHandContainer {
  position: absolute;
  width: 30vw;
  // height: 60vh;
  top: 40vh;
  right: 0;
  // object-fit: contain;
  // aspect-ratio: 1/10;
  transform: rotateZ(-177.13deg);

  img {
    position: absolute;
    bottom: 0;
  }
}

#content {
  overflow-y: auto;
  -webkit-mask-image: linear-gradient(
    to bottom,
    transparent 0,
    black var(--top-mask-size, 0),
    black calc(100% - var(--bottom-mask-size, 0)),
    transparent 100%
  );
  mask-image: linear-gradient(
    to bottom,
    transparent 0,
    black var(--top-mask-size, 0),
    black calc(100% - var(--bottom-mask-size, 0)),
    transparent 100%
  );
  --top-mask-size: 0px;
  --bottom-mask-size: 0px;
}

#content.is-top-overflowing {
  --top-mask-size: 48px !important;
}

#content.is-bottom-overflowing {
  --bottom-mask-size: 48px !important;
}
